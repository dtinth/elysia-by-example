{
  "taskId": "hook-log__500__node",
  "success": true,
  "runtimeLogs": [
    {
      "type": "stderr",
      "contents": "(node:28) ExperimentalWarning: Type Stripping is an experimental feature and might change at any time\n(Use `node --trace-warnings ...` to show where the warning was created)"
    },
    {
      "type": "stdout",
      "contents": "[runtime] Node v22.16.0"
    },
    {
      "type": "stdout",
      "contents": "ðŸ¦Š Elysia is running at :::3000"
    },
    {
      "type": "stdout",
      "contents": "[onRequest]       { error, path, qi, redirect, request, server, set, status, store, url }"
    },
    {
      "type": "stdout",
      "contents": "[onParse]         { contentType, cookie, error, headers, path, qi, query, redirect, request, route, server, set, status, store, url }"
    },
    {
      "type": "stdout",
      "contents": "[onTransform]     { body, cookie, error, headers, path, qi, query, redirect, request, route, server, set, status, store, url }"
    },
    {
      "type": "stdout",
      "contents": "[onBeforeHandle]  { body, cookie, error, headers, path, qi, query, redirect, request, route, server, set, status, store, url }"
    },
    {
      "type": "stdout",
      "contents": "[handler]         { body, cookie, error, headers, path, qi, query, redirect, request, route, server, set, status, store, url }"
    },
    {
      "type": "stdout",
      "contents": "[onError]         { body, code, cookie, error, headers, path, qi, query, redirect, request, route, server, set, status, store, url }"
    },
    {
      "type": "stdout",
      "contents": "[mapResponse]     { body, code, cookie, error, headers, path, qi, query, redirect, request, response, route, server, set, status, store, url }"
    },
    {
      "type": "stdout",
      "contents": "[onError]         { body, code, cookie, error, headers, path, qi, query, redirect, request, response, route, server, set, status, store, url }"
    },
    {
      "type": "stdout",
      "contents": "[mapResponse]     { body, code, cookie, error, headers, path, qi, query, redirect, request, response, route, server, set, status, store, url }\n[onAfterResponse] { body, code, cookie, error, headers, path, qi, query, redirect, request, response, route, server, set, status, store, url }"
    }
  ],
  "testerLogs": [
    {
      "type": "command",
      "timestamp": "2025-06-01T06:24:15.497Z",
      "command": "curl -s -D- \"http://localhost:3000?crash=1\" -X POST -d x=1",
      "success": true,
      "output": "HTTP/1.1 500 Internal Server Error\r\nContent-Length: 5\r\nDate: Sun, 01 Jun 2025 06:24:15 GMT\r\nConnection: keep-alive\r\nKeep-Alive: timeout=5\r\n\r\ncrash",
      "error": ""
    }
  ]
}